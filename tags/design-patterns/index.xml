<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Patterns on Codeless Code</title>
    <link>https://code.lol/tags/design-patterns/</link>
    <description>Recent content in Design Patterns on Codeless Code</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 May 2020 19:41:57 -0700</lastBuildDate>
    <atom:link href="https://code.lol/tags/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self Modifying Type Predicates in Typescript</title>
      <link>https://code.lol/post/programming/self-modifying-type-predicates/</link>
      <pubDate>Sun, 03 May 2020 19:41:57 -0700</pubDate>
      <guid>https://code.lol/post/programming/self-modifying-type-predicates/</guid>
      <description>&lt;p&gt;TypeScript&amp;rsquo;s type predicates can modify the type of &lt;code&gt;this&lt;/code&gt; itself, enabling self-modifying type behavior that approaches dependent types. By implementing &lt;code&gt;is&amp;lt;K extends keyof ShapeTypes&amp;gt;(type: K): this is ShapeTypes[K]&lt;/code&gt; on abstract classes, we achieve compile-time type narrowing where &lt;code&gt;shape.is(&#39;circle&#39;)&lt;/code&gt; transforms the &lt;code&gt;shape&lt;/code&gt; variable&amp;rsquo;s type from &lt;code&gt;Shape&lt;/code&gt; to &lt;code&gt;Circle&lt;/code&gt;, unlocking properties like &lt;code&gt;shape.radius&lt;/code&gt; within conditional blocks.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
