<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Efficiency on Codeless Code</title>
    <link>https://code.lol/tags/efficiency/</link>
    <description>Recent content in Efficiency on Codeless Code</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Aug 2022 16:37:21 -0700</lastBuildDate>
    <atom:link href="https://code.lol/tags/efficiency/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A non-recursive type-level inclusion operator</title>
      <link>https://code.lol/post/programming/non-recursive-includes/</link>
      <pubDate>Sat, 27 Aug 2022 16:37:21 -0700</pubDate>
      <guid>https://code.lol/post/programming/non-recursive-includes/</guid>
      <description>&lt;p&gt;A performance-optimized, non-recursive implementation of a type-level array inclusion operator in TypeScript. By leveraging tuple spread syntax and conditional types instead of recursive patterns, we achieve &lt;code&gt;Includes&amp;lt;[1, 2, 3], 2&amp;gt;&lt;/code&gt; evaluation in O(1) type instantiation depth rather than O(n). This technique improves compile-time performance for large tuple operations, avoiding TypeScript&amp;rsquo;s recursion depth limits while maintaining the same type-level guarantees.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
