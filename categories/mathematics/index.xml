<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mathematics on Codeless Code</title>
    <link>https://code.lol/categories/mathematics/</link>
    <description>Recent content in Mathematics on Codeless Code</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Dec 2022 22:58:35 -0800</lastBuildDate>
    <atom:link href="https://code.lol/categories/mathematics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Type-level Collatz Sequence</title>
      <link>https://code.lol/post/programming/type-level-collatz/</link>
      <pubDate>Thu, 08 Dec 2022 22:58:35 -0800</pubDate>
      <guid>https://code.lol/post/programming/type-level-collatz/</guid>
      <description>&lt;p&gt;Implementing the famous Collatz conjecture entirely within TypeScript&amp;rsquo;s type system, demonstrating type-level arithmetic and recursive computation. The sequence follows $n \rightarrow n/2$ if even, $n \rightarrow 3n+1$ if odd, conjecturing all positive integers reach 1. Using template literal types and conditional type recursion, we can compute &lt;code&gt;Collatz&amp;lt;27&amp;gt;&lt;/code&gt; yielding the 111-step sequence purely at compile time - pushing TypeScript&amp;rsquo;s type system to perform actual mathematical computation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programs of Length N: Collatz, Chaitin, and Church</title>
      <link>https://code.lol/post/programming/programs-of-length-n/</link>
      <pubDate>Fri, 03 Sep 2021 15:12:34 -0700</pubDate>
      <guid>https://code.lol/post/programming/programs-of-length-n/</guid>
      <description>&lt;p&gt;How many lambda calculus programs exist with exactly $N$ terms? This exploration dives into deep questions about computational complexity, from counting programs like &lt;code&gt;(λx. x x) (λx. x x)&lt;/code&gt; to analyzing the non-computable &lt;code&gt;BB(N)&lt;/code&gt; busy beaver function that grows faster than any computable sequence. We examine Chaitin&amp;rsquo;s constant $Ω$ and why determining program convergence connects to unsolved problems like the Collatz conjecture &lt;code&gt;collatz(3n + 1)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
